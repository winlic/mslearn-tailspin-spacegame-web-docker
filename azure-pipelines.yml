# Build and push an image to Azure Container Registry
# Deploy to Azure App Service (optional)
# Deploy to Azure AKS (public)

trigger:
- '*'

resources:
- repo: self

variables:
  webRepository: 'web'
  dockerfilePath: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/'
  tag: '$(Build.BuildId)'
  scriptLocation: '$(Build.Repository.LocalPath)/cicd.sh'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: 'MyAgentPool'
    variables:
      - group: Release
    steps:

    - task: DockerInstaller@0
      displayName: Docker Installer
      inputs:
        dockerVersion: 17.09.0-ce
        releaseType: stable

    - script: sudo chmod +x $(scriptLocation)
      displayName: 'Set CICD script executable'

    - script: sudo $(scriptLocation) "Build an Docker image" $(dockerfilePath) $(RegistryShortName) $(webRepository) $(tag) $(Build.Repository.LocalPath)
      displayName: 'Build an Docker image'

    - script: sudo $(scriptLocation) "Login to Azure Container Registry" $(RegistryShortName) $(RegistryPass)
      displayName: 'Login to Azure Container Registry'
    
    - script: sudo $(scriptLocation) "Push Docker image to Azure Container Registry" $(RegistryShortName) $(webRepository) $(tag)
      displayName: 'Push Docker image to Azure Container Registry'
    
    - script: sudo docker logout
      displayName: 'Logout from Azure Container Registry'

- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  jobs:
    - job: Deploy1
      displayName: Deploy the container to Azure App Service (Option)
      pool:
        name: 'MyAgentPool'
      variables:
        - group: Release
      steps:
        - task: AzureWebAppContainer@1
          inputs:
            appName: $(WebAppName)
            azureSubscription: Resource Manager - Tailspin - Space Game
            imageName: '$(RegistryName)/$(webRepository):$(build.buildId)'
            
    - job: Deploy2
      displayName: Deploy the container to public Azure AKS
      pool:
        name: 'MyAgentPool'
      variables:
        - group: Release
      steps:
      
      - task: HelmInstaller@1
        displayName: Helm installer
        inputs: 
          helmVersionToInstall: latest

      - script: sudo chmod +x $(scriptLocation)
        displayName: 'Set CICD script executable'

      - script: sudo $(scriptLocation) "Create image pull secret" $(RegistryShortName) $(RegistryPass) $(AKSNameSpace)
        displayName: 'Create image pull secret'

      - script: sudo $(scriptLocation) "Helm install or update Task" $(WebAppName) $(Build.Repository.LocalPath) $(RegistryShortName) $(webRepository) $(tag) $(ResourceGroupName) $(ClusterName) $(AKSNameSpace)
        displayName: 'Helm install or update Task'

      - script: sudo $(scriptLocation) "Install Ingress"
        displayName: 'Install Ingress'

      - script: sudo $(scriptLocation) "Set Ingress rule" $(WebAppName) $(AKSNameSpace) $(WebAppDNSName)
        displayName: 'Set Ingress rule'
